{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\projects\\\\movie-selector\\\\src\\\\components\\\\Read.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GetMovie } from '../Reducers/MovieReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Read() {\n  _s();\n  const dispatch = useDispatch();\n  const movies = useSelector(state => state.MovieData.movies);\n  const loading = useSelector(state => state.MovieData.loading);\n  const handleclick = () => {\n    dispatch(GetMovie());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleclick,\n      children: \"Fetch data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Array.isArray(movies) ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genre: \", movie.genre.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"IMDb Rating: \", movie.imdbrating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this)]\n        }, movie.imdbid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Read, \"dOb8QRc/IWeqXLR+Xp7psJtKV18=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Read;\nvar _c;\n$RefreshReg$(_c, \"Read\");","map":{"version":3,"names":["React","GetMovie","useDispatch","useSelector","jsxDEV","_jsxDEV","Read","_s","dispatch","movies","state","MovieData","loading","handleclick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","movie","title","genre","join","imdbrating","imdbid","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/projects/movie-selector/src/components/Read.js"],"sourcesContent":["import React from 'react';\r\nimport { GetMovie } from '../Reducers/MovieReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function Read() {\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector((state) => state.MovieData.movies); \r\n  const loading = useSelector((state) => state.MovieData.loading);\r\n\r\n  const handleclick = () => { \r\n    dispatch(GetMovie());\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <button onClick={handleclick}>Fetch data</button>\r\n      <div>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <div>\r\n            {/* Check if movies is an array before mapping */}\r\n            {Array.isArray(movies) ? (\r\n              movies.map((movie) => (\r\n                <div key={movie.imdbid}>\r\n                  <h2>{movie.title}</h2>\r\n                  <p>Genre: {movie.genre.join(', ')}</p>\r\n                  <p>IMDb Rating: {movie.imdbrating}</p>\r\n                  {/* Add other movie details as needed */}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No movies available</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,MAAM,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACF,MAAM,CAAC;EAC7D,MAAMG,OAAO,GAAGT,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACC,OAAO,CAAC;EAE/D,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBL,QAAQ,CAACP,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEI,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAQU,OAAO,EAAEF,WAAY;MAAAC,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDd,OAAA;MAAAS,QAAA,EACGF,OAAO,gBACNP,OAAA;QAAAS,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEjBd,OAAA;QAAAS,QAAA,EAEGM,KAAK,CAACC,OAAO,CAACZ,MAAM,CAAC,GACpBA,MAAM,CAACa,GAAG,CAAEC,KAAK,iBACflB,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAAKS,KAAK,CAACC;UAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBd,OAAA;YAAAS,QAAA,GAAG,SAAO,EAACS,KAAK,CAACE,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtCd,OAAA;YAAAS,QAAA,GAAG,eAAa,EAACS,KAAK,CAACI,UAAU;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAH9BI,KAAK,CAACK,MAAM;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKjB,CACN,CAAC,gBAEFd,OAAA;UAAAS,QAAA,EAAG;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC1B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CAnCuBD,IAAI;EAAA,QACTJ,WAAW,EACbC,WAAW,EACVA,WAAW;AAAA;AAAA0B,EAAA,GAHLvB,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}