{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst url = 'https://moviesdatabase.p.rapidapi.com/titles/series/%7BseriesId%7D';\nconst options = {\n  method: 'GET',\n  headers: {\n    'X-RapidAPI-Key': '662df04e3emsh03b3a93876580d2p15f519jsn8555fd274bde',\n    'X-RapidAPI-Host': 'moviesdatabase.p.rapidapi.com'\n  }\n};\nexport const GetMovie = createAsyncThunk(\"GetMovie\", async (data, {\n  rejectWithValue\n}) => {\n  const response = await fetch(url, options);\n  try {\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (error) {\n    console.log();\n  }\n});\nexport const MovieDetails = createSlice({\n  name: \"MovieDetails\",\n  initialState: {\n    movie: [],\n    loding: false,\n    error: null\n  },\n  extraReducers: {\n    [GetMovie.pending]: state => {\n      state.loding = true;\n    },\n    [GetMovie.fulfilled]: (state, action) => {\n      state.movie = action.payload;\n      state.loding = false;\n    },\n    [GetMovie.rejected]: (state, action) => {\n      state.movie = action.payload;\n      state.error = action.error;\n    }\n  }\n});\nexport default MovieDetails.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","url","options","method","headers","GetMovie","data","rejectWithValue","response","fetch","result","json","console","log","error","MovieDetails","name","initialState","movie","loding","extraReducers","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/dell/Desktop/projects/movie-selector/src/Reducers/MovieReducer.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nconst url = 'https://moviesdatabase.p.rapidapi.com/titles/series/%7BseriesId%7D';\r\nconst options = {\r\n\tmethod: 'GET',\r\n\theaders: {\r\n\t\t'X-RapidAPI-Key': '662df04e3emsh03b3a93876580d2p15f519jsn8555fd274bde',\r\n\t\t'X-RapidAPI-Host': 'moviesdatabase.p.rapidapi.com'\r\n\t}\r\n};\r\nexport const GetMovie=createAsyncThunk(\"GetMovie\",async(data,{rejectWithValue})=>{\r\n    const response = await fetch(url, options);\r\n    try {\r\n        const result = await response.json();\r\n        console.log(result);\r\n        return result;\r\n} catch (error) {\r\n\tconsole.log()\r\n}\r\n})\r\n\r\nexport const MovieDetails = createSlice({\r\nname:\"MovieDetails\",\r\ninitialState:{\r\n    movie:[],\r\n    loding:false,\r\n    error:null,\r\n},\r\nextraReducers:{\r\n    [GetMovie.pending]:(state)=>{\r\n        state.loding=true;\r\n    },\r\n    [GetMovie.fulfilled]:(state,action)=>{\r\n        state.movie=action.payload;\r\n        state.loding=false;\r\n    },\r\n    [GetMovie.rejected]:(state,action)=>{\r\n        state.movie=action.payload;\r\n        state.error=action.error;\r\n    },\r\n}\r\n  \r\n});\r\nexport default MovieDetails.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,MAAMC,GAAG,GAAG,oEAAoE;AAChF,MAAMC,OAAO,GAAG;EACfC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE;IACR,gBAAgB,EAAE,oDAAoD;IACtE,iBAAiB,EAAE;EACpB;AACD,CAAC;AACD,OAAO,MAAMC,QAAQ,GAACL,gBAAgB,CAAC,UAAU,EAAC,OAAMM,IAAI,EAAC;EAACC;AAAe,CAAC,KAAG;EAC7E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEC,OAAO,CAAC;EAC1C,IAAI;IACA,MAAMQ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,OAAOA,MAAM;EACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACfF,OAAO,CAACC,GAAG,CAAC,CAAC;EACd;AACA,CAAC,CAAC;AAEF,OAAO,MAAME,YAAY,GAAGhB,WAAW,CAAC;EACxCiB,IAAI,EAAC,cAAc;EACnBC,YAAY,EAAC;IACTC,KAAK,EAAC,EAAE;IACRC,MAAM,EAAC,KAAK;IACZL,KAAK,EAAC;EACV,CAAC;EACDM,aAAa,EAAC;IACV,CAACf,QAAQ,CAACgB,OAAO,GAAGC,KAAK,IAAG;MACxBA,KAAK,CAACH,MAAM,GAAC,IAAI;IACrB,CAAC;IACD,CAACd,QAAQ,CAACkB,SAAS,GAAE,CAACD,KAAK,EAACE,MAAM,KAAG;MACjCF,KAAK,CAACJ,KAAK,GAACM,MAAM,CAACC,OAAO;MAC1BH,KAAK,CAACH,MAAM,GAAC,KAAK;IACtB,CAAC;IACD,CAACd,QAAQ,CAACqB,QAAQ,GAAE,CAACJ,KAAK,EAACE,MAAM,KAAG;MAChCF,KAAK,CAACJ,KAAK,GAACM,MAAM,CAACC,OAAO;MAC1BH,KAAK,CAACR,KAAK,GAACU,MAAM,CAACV,KAAK;IAC5B;EACJ;AAEA,CAAC,CAAC;AACF,eAAeC,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}